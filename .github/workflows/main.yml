    - name: Linux Build
      if: runner.os == 'Linux'
      run: |
        mkdir -p dist
        VERSION="${{ steps.version.outputs.version }}"
        output_name="pyping-linux-x64-$VERSION"
        
        # 获取实际安装的包名（不带连字符）
        CHARSET_NORM_PKG=$(python -c "import charset_normalizer; print(charset_normalizer.__name__)")
        
        python -m nuitka \
          --standalone \
          --onefile \
          --follow-imports \
          --include-package=dns \
          --include-package=ping3 \
          --include-package=tcppinglib \
          --include-package=requests \
          --include-package=tqdm \
          --include-package=urllib3 \
          --include-package=idna \
          --include-package=$CHARSET_NORM_PKG \  # 使用实际包名
          --remove-output \
          --lto=yes \
          --assume-yes-for-downloads \
          --output-dir=dist \
          --output-filename="$output_name" \
          pyping.py
        
        chmod +x "dist/$output_name"
        cd dist
        shasum -a 256 * > checksums.txt

    - name: Windows Build
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path dist
        $VERSION = "${{ steps.version.outputs.version }}"
        $output_name = "pyping-windows-x64-$VERSION.exe"
        
        # 获取实际安装的包名（不带连字符）
        $CHARSET_NORM_PKG = python -c "import charset_normalizer; print(charset_normalizer.__name__)"
        
        python -m nuitka `
          --standalone `
          --onefile `
          --follow-imports `
          --include-package=dns `
          --include-package=ping3 `
          --include-package=tcppinglib `
          --include-package=requests `
          --include-package=tqdm `
          --include-package=urllib3 `
          --include-package=idna `
          --include-package=$CHARSET_NORM_PKG `  # 使用实际包名
          --remove-output `
          --lto=yes `
          --assume-yes-for-downloads `
          --output-dir=dist `
          --output-filename="$output_name" `
          pyping.py
        
        Set-Location dist
        Get-ChildItem | ForEach-Object {
          $hash = (Get-FileHash $_ -Algorithm SHA256).Hash
          "$($_.Name)  $hash" | Out-File -Append checksums.txt
        }